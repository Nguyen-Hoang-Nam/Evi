mod Test do
    fn test(age) where true do
        // Comment
        integer = 1
        float = 1.1
        boolean = true
        string = "Hello world"
        array = [1, 1.1, "Hello world"]
        object = {"a": 1, "b": 1.1, "c": "Hello world"} // Work with json
        tuple = ("ok", 1)
        binary = <178, 196, 255, 0> // Work with rpc
        function = (a, b) => a + b end

        // Operator
        float = integer + float
        boolean = integer == integer

        // Pipe
        string
        |> IO.print()

        "John"
        |> format(12)
        |> IO.print()

        // Anonymous function
        fun = (i) => 2 * i end

        IO.print("Hello world")

        [1, 2, 3]
        |> Enum.map((i) => 2 * i end)
        |> Enum.filter((i) => i > 2 end)

        object
        |> Enum.map((_, j) => j |> IO.print() end)

        match Base.decode64("SGVsbG8gd29ybGQ=") do
            (Ok, v) => v end
            (Error, e) => e |> IO.print() end
        end
    end

    fn test(_) do
        IO.print("Error")
    end

    fn more_arg(arg1, arg2) do
    end
end
