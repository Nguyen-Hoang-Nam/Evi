mod Test do
    import (encode, decode) from Xml
    import * from Base

    fn main() do
        // Type
        tuple = (Ok, 1)
        null = None

        @Int[3]
        integer_array = [1, 2, 3] // Best performance, store all in stack

        @Vec
        integer_vector = [1, 2, 3] // Lower, store all in heap
        object_vector = [1, 1.1, "Hello world"] // Default type of array is Vector

        value = 1
        pointer = *value

        value = 2
        &pointer // 2


        // Pipe
        "John"
        |> format(12)
        |> IO.print()

        2
        |> - 1 // 1

        12
        |> format("John", _)
        |> IO.print()

        ("John", "UK")
        |> three_arguments(_, 12, _)
        |> IO.print()

        // Multi
        multi "plus" do
            (_) => 1 + 1 |> Ok.success() end
        end
        |> multi "check" do
            ({"plus": 1}) => 1 |> Ok.wrap() end
            ({"plus": 2}) => None |> Ok.wrap() end
            (_) => "Number is not 2" |> Error.wrap() end
        end
        |> multi "minus" do
            ({"check": v}) => v |> unwrap_or(2) |> - 1 end
        end
        |> match do
            (Ok, {"plus": v}) => v |> Ok.wrap() end
            (Error, _, message) => message |> Error.wrap() end
        end

        // Import
        "John"
        |> Hello.print()
    end
end
